========================
OpenSPP Custom Fields UI
========================

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:91430b2782bc7617ec7986553990210e4a2cdcc637203b47313cee0116f4c35c
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Alpha-red.png
    :target: https://odoo-community.org/page/development-status
    :alt: Alpha
.. |badge2| image:: https://img.shields.io/badge/licence-LGPL--3-blue.png
    :target: http://www.gnu.org/licenses/lgpl-3.0-standalone.html
    :alt: License: LGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OpenSPP%2Fopenspp--modules-lightgray.png?logo=github
    :target: https://github.com/OpenSPP/openspp-modules/tree/17.0/spp_custom_fields_ui
    :alt: OpenSPP/openspp-modules

|badge1| |badge2| |badge3|

OpenSPP Custom Filter UI
========================

This document outlines the functionality of the **G2P Registry: Custom
Fields UI** module within the OpenSPP ecosystem. This module, depending
on the `g2p_registry_base <g2p_registry_base>`__ module, provides a
user-friendly interface for defining and managing custom fields for
registrants. These custom fields allow implementers to tailor the
registry to their specific program needs by capturing additional data
beyond the core fields provided by the base module.

Purpose
-------

The **G2P Registry: Custom Fields UI** module aims to:

-  Simplify the process of adding and modifying custom fields for
   registrants.
-  Provide a centralized location within the Odoo backend to manage
   these fields.
-  Offer flexibility in defining field types, validation rules, and
   display options.

Module Dependencies and Integration
-----------------------------------

1. `g2p_registry_base <g2p_registry_base>`__: This module depends on the
   **G2P Registry: Base** module, which provides the fundamental
   structure for storing and managing registrant data. The custom fields
   created through this UI module are directly integrated as extensions
   to the registrant profiles managed by the base module.

2. **Base (base)**: Leverages the Odoo Base module for core
   functionalities like user interface elements, data models, and access
   control.

Additional Functionality
------------------------

The key features provided by the **G2P Registry: Custom Fields UI**
module include:

-  **Custom Field Creation Wizard:** Offers a streamlined process to
   define new custom fields, guiding users through selecting the
   appropriate field type, label, and other relevant properties.
-  **Field Type Selection:** Supports various field types available
   within Odoo, such as Char, Integer, Selection, Date, Many2one
   (relational fields), and more, enabling storage of different data
   formats.
-  **Target Specificity:** Allows users to specify whether a custom
   field applies to individual registrants or groups, ensuring data is
   collected at the appropriate level.
-  **Field Category Distinction:** Differentiates between custom fields
   that capture directly entered data and those that are calculated
   based on other field values, allowing for automatic data derivation.
-  **Integration with Group Membership Kinds:** For calculated fields,
   provides the option to associate the calculation with specific group
   membership types defined within the system.
-  **Presence Indicator:** For calculated fields, includes the ability
   to configure a boolean "presence" indicator, simplifying the tracking
   of specific criteria related to group memberships.

Conclusion
----------

The **G2P Registry: Custom Fields UI** module empowers users to adapt
the OpenSPP registry to their unique requirements without the need for
extensive technical customization. Its intuitive interface and tight
integration with the `g2p_registry_base <g2p_registry_base>`__ module
simplify the management of custom data, enhancing the flexibility and
utility of the OpenSPP platform for diverse social protection programs.

.. IMPORTANT::
   This is an alpha version, the data model and design can change at any time without warning.
   Only for development or testing purpose, do not use in production.
   `More details on development status <https://odoo-community.org/page/development-status>`_

**Table of contents**

.. contents::
   :local:

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OpenSPP/openspp-modules/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/OpenSPP/openspp-modules/issues/new?body=module:%20spp_custom_fields_ui%0Aversion:%2017.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
-------

* OpenSPP.org

Maintainers
-----------

.. |maintainer-jeremi| image:: https://github.com/jeremi.png?size=40px
    :target: https://github.com/jeremi
    :alt: jeremi
.. |maintainer-gonzalesedwin1123| image:: https://github.com/gonzalesedwin1123.png?size=40px
    :target: https://github.com/gonzalesedwin1123
    :alt: gonzalesedwin1123

Current maintainers:

|maintainer-jeremi| |maintainer-gonzalesedwin1123| 

This module is part of the `OpenSPP/openspp-modules <https://github.com/OpenSPP/openspp-modules/tree/17.0/spp_custom_fields_ui>`_ project on GitHub.

You are welcome to contribute.
