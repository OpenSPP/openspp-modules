=========================
OpenSPP Encryption Module
=========================

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:df531be5bbc5760a1a9b3ca322b9e73215cd38b9e6fddf6949237990c7a26776
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-LGPL--3-blue.png
    :target: http://www.gnu.org/licenses/lgpl-3.0-standalone.html
    :alt: License: LGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OpenSPP%2Fopenspp--modules-lightgray.png?logo=github
    :target: https://github.com/OpenSPP/openspp-modules/tree/17.0/spp_encryption
    :alt: OpenSPP/openspp-modules

|badge1| |badge2| |badge3|

OpenSPP Encryption Module
=========================

The `spp_encryption <spp_encryption>`__ module extends the encryption
capabilities of OpenSPP by adding support for the
`JWCrypto <https://jwcrypto.readthedocs.io/en/latest/>`__ library. This
module builds upon the foundation provided by the
`g2p_encryption <g2p-encryption>`__ and offers a concrete implementation
of an encryption provider utilizing JWCrypto's functionalities.

Purpose and Functionality
-------------------------

The primary purpose of this module is to enable secure encryption,
decryption, signing, and verification of data within the OpenSPP
ecosystem using JWCrypto. It provides the following functionalities:

-  **JWCrypto Integration:** Seamlessly integrates the JWCrypto library
   into OpenSPP, enabling the use of its robust cryptographic functions.
-  **Encryption and Decryption:** Implements encryption and decryption
   methods based on JWCrypto's JWE (JSON Web Encryption) standard for
   securely handling sensitive data.
-  **JWT Signing and Verification:** Utilizes JWCrypto's JWT (JSON Web
   Token) capabilities to sign and verify data, ensuring data integrity
   and authenticity.
-  **Key Management:** Provides functionalities to generate, store, and
   manage JWCrypto keys within the OpenSPP database.

Integration and Usage
---------------------

The `spp_encryption <spp_encryption>`__ module extends the
``g2p.encryption.provider`` model introduced by the
`g2p_encryption <g2p-encryption>`__. It adds a new encryption provider
type, "JWCrypto," which users can select and configure through the Odoo
interface.

Here's how this module integrates with other OpenSPP components:

1. **Dependency:** Modules requiring advanced encryption features, such
   as those dealing with sensitive beneficiary data or financial
   transactions, would declare a dependency on the
   `spp_encryption <spp_encryption>`__ module.
2. **Configuration:** Administrators would configure a new encryption
   provider of type "JWCrypto" within the OpenSPP settings, providing
   the necessary JWCrypto key information.
3. **Utilization:** Modules requiring encryption can then utilize the
   configured JWCrypto provider through the standard encryption methods
   provided by the ``g2p.encryption.provider`` model.

Example Usage Scenario
----------------------

Let's consider a module responsible for handling beneficiary payment
data. This module needs to encrypt sensitive financial information
before storing or transmitting it.

1. The module would depend on `spp_encryption <spp_encryption>`__.
2. It would utilize the configured "JWCrypto" encryption provider.
3. Using the provider's ``encrypt_data_jwcrypto`` method, the module can
   securely encrypt the payment data.
4. Upon retrieval, the module would use the corresponding
   ``decrypt_data_jwcrypto`` method to decrypt the data.

Benefits of using spp_encryption:
---------------------------------

-  **Enhanced Security:** Leverages JWCrypto's robust cryptographic
   algorithms to provide strong encryption and data protection.
-  **Standardized Implementation:** Adheres to established standards
   like JWE and JWT, ensuring interoperability and security best
   practices.
-  **Simplified Key Management:** Provides functionalities for
   generating and managing JWCrypto keys within the OpenSPP interface.
-  **Extensibility:** Can be further extended to support additional
   JWCrypto features or customized encryption workflows.

By offering a dedicated JWCrypto-based encryption provider, the
`spp_encryption <spp_encryption>`__ module strengthens OpenSPP's
security framework and provides developers with a reliable toolset for
protecting sensitive data within their modules.

**Table of contents**

.. contents::
   :local:

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OpenSPP/openspp-modules/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/OpenSPP/openspp-modules/issues/new?body=module:%20spp_encryption%0Aversion:%2017.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
-------

* OpenSPP.org

Maintainers
-----------

.. |maintainer-jeremi| image:: https://github.com/jeremi.png?size=40px
    :target: https://github.com/jeremi
    :alt: jeremi
.. |maintainer-gonzalesedwin1123| image:: https://github.com/gonzalesedwin1123.png?size=40px
    :target: https://github.com/gonzalesedwin1123
    :alt: gonzalesedwin1123

Current maintainers:

|maintainer-jeremi| |maintainer-gonzalesedwin1123| 

This module is part of the `OpenSPP/openspp-modules <https://github.com/OpenSPP/openspp-modules/tree/17.0/spp_encryption>`_ project on GitHub.

You are welcome to contribute.
