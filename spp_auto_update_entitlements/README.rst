================================
OpenSPP Auto-Update Entitlements
================================

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:23376a0c786d3d993ddb6a601f2067dd66fa20ded7fd02701222500eb8c13ee4
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Alpha-red.png
    :target: https://odoo-community.org/page/development-status
    :alt: Alpha
.. |badge2| image:: https://img.shields.io/badge/licence-LGPL--3-blue.png
    :target: http://www.gnu.org/licenses/lgpl-3.0-standalone.html
    :alt: License: LGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OpenSPP%2Fopenspp--modules-lightgray.png?logo=github
    :target: https://github.com/OpenSPP/openspp-modules/tree/17.0/spp_auto_update_entitlements
    :alt: OpenSPP/openspp-modules

|badge1| |badge2| |badge3|

OpenSPP Auto-Update Entitlements
================================

This document describes the **OpenSPP Auto-Update Entitlements** module
within the OpenSPP platform. This module enhances the management of
entitlement lifecycles by automatically updating entitlement states when
program cycles end. This automation streamlines benefit administration
and provides a more accurate view of benefit utilization.

Purpose
-------

The **OpenSPP Auto-Update Entitlements** module primarily focuses on:

-  **Automating Entitlement State Transitions**: Automatically updates
   the status of entitlements at the end of a program cycle based on
   their redemption status.
-  **Improving Data Accuracy**: Provides a more accurate reflection of
   entitlement utilization by automatically transitioning entitlements
   to appropriate states (e.g., "Partially Redeemed/Paid to
   Beneficiary", "Redeemed/Paid to Beneficiary").
-  **Reducing Manual Effort**: Eliminates the need for manual updates of
   entitlement states, freeing up program administrators to focus on
   other tasks.

Module Dependencies and Integration
-----------------------------------

1. `OpenSPP Entitlement Transactions <spp_ent_trans>`__:

   -  Heavily relies on this module to access transaction histories
      associated with entitlements.
   -  Uses transaction data to determine the redemption status of
      entitlements and trigger appropriate state updates.

2. `g2p_programs <g2p_programs>`__:

   -  Integrates with the core program management module to access
      program cycle data.
   -  Leverages cycle end dates to initiate the automatic update process
      for entitlements associated with the ending cycle.

3. `OpenSPP Programs <spp_programs>`__:

   -  Builds upon the OpenSPP Programs module's functionality for
      managing both cash and in-kind entitlements.
   -  Extends entitlement models and views to accommodate the automatic
      state update logic.

Additional Functionality
------------------------

-  **Cycle End State Check**: When a program cycle is marked as ended,
   the module automatically analyzes the transaction history of each
   associated entitlement.

-  **Entitlement State Logic**: Based on transaction data, the module
   applies the following logic to update entitlement states:

   -  **Partially Redeemed/Paid to Beneficiary**: If an entitlement has
      transactions but still has a remaining balance, its state changes
      to "Partially Redeemed/Paid to Beneficiary".
   -  **Redeemed/Paid to Beneficiary**: If an entitlement has been fully
      redeemed with no remaining balance, its state transitions to
      "Redeemed/Paid to Beneficiary".
   -  **Unredeemed**: If an entitlement has no associated transactions,
      its state remains unchanged.

-  **UI Enhancements**:

   -  Modifies the cycle view to automatically mark a cycle as expired
      when its end date is in the past.
   -  Extends entitlement views to display the calculated
      ``entitlement_balance`` based on the associated transaction
      history.

Conclusion
----------

The **OpenSPP Auto-Update Entitlements** module improves the accuracy
and efficiency of entitlement management in OpenSPP. By automating state
transitions based on actual benefit utilization, it provides program
administrators with a more reliable view of program operations while
reducing manual administrative tasks.

.. IMPORTANT::
   This is an alpha version, the data model and design can change at any time without warning.
   Only for development or testing purpose, do not use in production.
   `More details on development status <https://odoo-community.org/page/development-status>`_

**Table of contents**

.. contents::
   :local:

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OpenSPP/openspp-modules/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/OpenSPP/openspp-modules/issues/new?body=module:%20spp_auto_update_entitlements%0Aversion:%2017.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
-------

* OpenSPP.org

Maintainers
-----------

.. |maintainer-jeremi| image:: https://github.com/jeremi.png?size=40px
    :target: https://github.com/jeremi
    :alt: jeremi
.. |maintainer-gonzalesedwin1123| image:: https://github.com/gonzalesedwin1123.png?size=40px
    :target: https://github.com/gonzalesedwin1123
    :alt: gonzalesedwin1123

Current maintainers:

|maintainer-jeremi| |maintainer-gonzalesedwin1123| 

This module is part of the `OpenSPP/openspp-modules <https://github.com/OpenSPP/openspp-modules/tree/17.0/spp_auto_update_entitlements>`_ project on GitHub.

You are welcome to contribute.
